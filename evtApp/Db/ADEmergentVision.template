#
# EPICS Database template file for ADEmergentVision
#
# Author: Jakub Wlodek
# Created On: Dec-7-2018
#

##############################################
# stores the Pixel Format for EVT camera
################################################
record(mbbo, "$(P)$(R)EVTPixelFormat"){
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(ZRST, "8 Bit")
    field(ZRVL, "0")
    field(ONST, "10 Bit")
    field(ONVL, "1")
    field(TWST, "12 Bit")
    field(TWVL, "2")
    field(THST, "10 Bit Packed")
    field(THVL, "3")
    field(FRST, "12 Bit Packed")
    field(FRVL, "4")
    field(OUT, "@asyn($(PORT),$(ADDR),$(TIMEOUT))EVT_PIXEL_FORMAT")
}

record(mbbi, "$(P)$(R)EVTPixelFormat_RBV"){
    field(DTYP, "asynInt32")
    field(ZRST, "8 Bit")
    field(ZRVL, "0")
    field(ONST, "10 Bit")
    field(ONVL, "1")
    field(TWST, "12 Bit")
    field(TWVL, "2")
    field(THST, "10 Bit Packed")
    field(THVL, "3")
    field(FRST, "12 Bit Packed")
    field(FRVL, "4")
    field(INP, "@asyn($(PORT),$(ADDR),$(TIMEOUT))EVT_PIXEL_FORMAT")
    field(SCAN, "I/O Intr")
}

##############################################
# stores the Framerate for EVT camera
################################################
record(ao, "$(P)$(R)EVTFramerate"){
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(OUT, "@asyn($(PORT),$(ADDR),$(TIMEOUT))EVT_FRAMERATE")
    field(VAL, "30")
}

record(ai, "$(P)$(R)EVTFramerate_RBV"){
    field(DTYP, "asynInt32")
    field(INP, "@asyn($(PORT),$(ADDR),$(TIMEOUT))EVT_FRAMERATE")
    field(SCAN, "I/O Intr")
}

##############################################
# stores the Offset X for EVT camera
################################################
record(ao, "$(P)$(R)EVTOffsetX"){
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(OUT, "@asyn($(PORT),$(ADDR),$(TIMEOUT))EVT_OFFX")
    field(VAL, "0")
}

record(ai, "$(P)$(R)EVTOffsetX_RBV"){
    field(DTYP, "asynInt32")
    field(INP, "@asyn($(PORT),$(ADDR),$(TIMEOUT))EVT_OFFX")
    field(SCAN, "I/O Intr")
}

##############################################
# stores the Offset Y for EVT camera
################################################
record(ao, "$(P)$(R)EVTOffsetY"){
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(OUT, "@asyn($(PORT),$(ADDR),$(TIMEOUT))EVT_OFFY")
    field(VAL, "0")
}

record(ai, "$(P)$(R)EVTOffsetY_RBV"){
    field(DTYP, "asynInt32")
    field(INP, "@asyn($(PORT),$(ADDR),$(TIMEOUT))EVT_OFFY")
    field(SCAN, "I/O Intr")
}

##############################################
# stores the BufferMode for EVT camera
################################################
record(bo, "$(P)$(R)EVTBuffMode"){
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(OUT, "@asyn($(PORT),$(ADDR),$(TIMEOUT))EVT_BUFF_MODE")
    field(ZNAM, "Off")
    field(ONAM, "On")
    field(VAL, "0")
    info(autosaveFields, "VAL")
}

record(bi, "$(P)$(R)EVTBuffMode_RBV"){
    field(DTYP, "asynInt32")
    field(INP, "@asyn($(PORT),$(ADDR),$(TIMEOUT))EVT_BUFF_MODE")
    field(ZNAM, "Off")
    field(ONAM, "On")
    field(OSV,  "MINOR")
    field(SCAN, "I/O Intr")
}

##############################################
# stores the Buffer Number for EVT camera
################################################
record(ao, "$(P)$(R)EVTBuffNum"){
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(OUT, "@asyn($(PORT),$(ADDR),$(TIMEOUT))EVT_BUFF_NUM")
    field(VAL, "0")
}

record(ai, "$(P)$(R)EVTBuffNum_RBV"){
    field(DTYP, "asynInt32")
    field(INP, "@asyn($(PORT),$(ADDR),$(TIMEOUT))EVT_BUFF_NUM")
    field(SCAN, "I/O Intr")
}

##############################################
# stores the PacketSize for EVT camera
################################################
record(ao, "$(P)$(R)EVTPacketSize"){
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(OUT, "@asyn($(PORT),$(ADDR),$(TIMEOUT))EVT_PACKET")
}

record(ai, "$(P)$(R)EVTPacketSize_RBV"){
    field(DTYP, "asynInt32")
    field(INP, "@asyn($(PORT),$(ADDR),$(TIMEOUT))EVT_PACKET")
    field(SCAN, "I/O Intr")
}

##############################################
# stores the LUT Enable for EVT camera
################################################
record(bo, "$(P)$(R)EVTLUTEnable"){
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(OUT, "@asyn($(PORT),$(ADDR),$(TIMEOUT))EVT_LUT")
    field(ZNAM, "Disable")
    field(ONAM, "Enable")
    field(VAL, "0")
    field(OSV,  "MINOR")
    info(autosaveFields, "VAL")
}

record(bi, "$(P)$(R)EVTLUTEnable_RBV"){
    field(DTYP, "asynInt32")
    field(INP, "@asyn($(PORT),$(ADDR),$(TIMEOUT))EVT_LUT")
    field(ZNAM, "Disable")
    field(ONAM, "Enable")
    field(SCAN, "I/O Intr")
}

##############################################
# stores the Auto Gain for EVT camera
################################################
record(bo, "$(P)$(R)EVTAutoGain"){
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(OUT, "@asyn($(PORT),$(ADDR),$(TIMEOUT))EVT_AUTOGAIN")
    field(ZNAM, "Disable")
    field(ONAM, "Enable")
    field(VAL, "0")
    field(OSV,  "MINOR")
    info(autosaveFields, "VAL")
}

record(bi, "$(P)$(R)EVTAutoGain_RBV"){
    field(DTYP, "asynInt32")
    field(INP, "@asyn($(PORT),$(ADDR),$(TIMEOUT))EVT_AUTOGAIN")
    field(ZNAM, "Disable")
    field(ONAM, "Enable")
    field(SCAN, "I/O Intr")
}


record(mbbo, "$(P)$(R)EVTGpiStartMode"){
    field(DTYP, "asynInt32")
    field(OUT, "@asyn($(PORT),$(ADDR), $(TIMEOUT))EVT_GPI_START_MODE")
    field(VAL, "0")
    info(autosaveFields, "VAL")
}

record(mbbi, "$(P)$(R)EVTGpiStartMode_RBV"){
    field(DTYP, "asynInt32")
    field(INP, "@asyn($(PORT),$(ADDR), $(TIMEOUT))EVT_GPI_START_MODE")
    field(VAL, "0")
    field(SCAN, "I/O Intr")
}


record(mbbo, "$(P)$(R)EVTGpiStartEvent"){
    field(DTYP, "asynInt32")
    field(OUT, "@asyn($(PORT),$(ADDR), $(TIMEOUT))EVT_GPI_START_EVENT")
    field(VAL, "0")
    info(autosaveFields, "VAL")
}

record(mbbi, "$(P)$(R)EVTGpiStartEvent_RBV"){
    field(DTYP, "asynInt32")
    field(INP, "@asyn($(PORT),$(ADDR), $(TIMEOUT))EVT_GPI_START_EVENT")
    field(VAL, "0")
    field(SCAN, "I/O Intr")
}


record(mbbo, "$(P)$(R)EVTGpiEndMode"){
    field(DTYP, "asynInt32")
    field(OUT, "@asyn($(PORT),$(ADDR), $(TIMEOUT))EVT_GPI_END_MODE")
    field(VAL, "0")
    info(autosaveFields, "VAL")
}

record(mbbi, "$(P)$(R)EVTGpiEndMode_RBV"){
    field(DTYP, "asynInt32")
    field(INP, "@asyn($(PORT),$(ADDR), $(TIMEOUT))EVT_GPI_END_MODE")
    field(VAL, "0")
    field(SCAN, "I/O Intr")
}


record(mbbo, "$(P)$(R)EVTGpiEndEvent"){
    field(DTYP, "asynInt32")
    field(OUT, "@asyn($(PORT),$(ADDR), $(TIMEOUT))EVT_GPI_END_EVENT")
    field(VAL, "0")
    info(autosaveFields, "VAL")
}

record(mbbi, "$(P)$(R)EVTGpiEndEvent_RBV"){
    field(DTYP, "asynInt32")
    field(INP, "@asyn($(PORT),$(ADDR), $(TIMEOUT))EVT_GPI_END_EVENT")
    field(VAL, "0")
    field(SCAN, "I/O Intr")
}


record(ao, "$(P)$(R)EVTTgFrameTime"){
    field(DTYP, "asynInt32")
    field(OUT, "@asyn($(PORT),$(ADDR), $(TIMEOUT))EVT_TG_FRAME_TIME")
    field(VAL, "0")
    info(autosaveFields, "VAL")
}

record(ai, "$(P)$(R)EVTTgFrameTime_RBV"){
    field(DTYP, "asynInt32")
    field(INP, "@asyn($(PORT),$(ADDR), $(TIMEOUT))EVT_TG_FRAME_TIME")
    field(VAL, "0")
    field(SCAN, "I/O Intr")
}


record(ao, "$(P)$(R)EVTTgHighTime"){
    field(DTYP, "asynInt32")
    field(OUT, "@asyn($(PORT),$(ADDR), $(TIMEOUT))EVT_TG_HIGH_TIME")
    field(VAL, "0")
    info(autosaveFields, "VAL")
}

record(ai, "$(P)$(R)EVTTgHighTime_RBV"){
    field(DTYP, "asynInt32")
    field(INP, "@asyn($(PORT),$(ADDR), $(TIMEOUT))EVT_TG_HIGH_TIME")
    field(VAL, "0")
    field(SCAN, "I/O Intr")
}


record(ao, "$(P)$(R)EVTTriggerDelay"){
    field(DTYP, "asynInt32")
    field(OUT, "@asyn($(PORT),$(ADDR), $(TIMEOUT))EVT_TRIGGER_DELAY")
    field(VAL, "0")
    info(autosaveFields, "VAL")
}

record(ai, "$(P)$(R)EVTTriggerDelay_RBV"){
    field(DTYP, "asynInt32")
    field(INP, "@asyn($(PORT),$(ADDR), $(TIMEOUT))EVT_TRIGGER_DELAY")
    field(VAL, "0")
    field(SCAN, "I/O Intr")
}
